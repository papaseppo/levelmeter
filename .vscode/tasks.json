{
    "version": "2.0.0",
    "tasks": [
        {
            "label": "build",
            "command": "dotnet",
            "type": "shell",
            "args": [
                "build",
                "/property:GenerateFullPaths=true",
                "/consoleloggerparameters:NoSummary"
            ],
            "group": "build",
            "presentation": {
                "reveal": "silent"
            },
            "problemMatcher": "$msCompile"
        },
        {
            "label": "publish",
            "type": "shell",
            "command": "dotnet",
            "args": [
                "publish",
                "-c",
                "Release"
            ],
            "dependsOn": "build"
        },
        {
            "label": "Format code",
            "type": "shell",
            "command": "dotnet",
            "args": [
                "format"
            ],
            "group": "none",
            "presentation": {
                "echo": true,
                "reveal": "silent",
                "focus": false,
                "panel": "shared",
                "showReuseMessage": true,
                "clear": false
            }
        },
        {
            "label": "Rebuild All Cylindric Scales",
            "type": "shell",
            "command": "find ~+/scales/definitions/cylinder*.json | xargs -I % --max-procs=5 dotnet ~+/src/dotnet-levelmeter/bin/Release/net8.0/dotnet-levelmeter.dll -- -c %",
            "problemMatcher": [],
            "dependsOn": "publish"
        },
        {
            "label": "Check scales json schema",
            "type": "shell",
            "command": "find ~+/scales/definitions/*.json | xargs -I % check-jsonschema % --schemafile ~+/scales/definitions/schemas/scale-config",
            "problemMatcher": []
        },
        {
            "label": "Generate scale",
            "type": "shell",
            "command": "dotnet run --project ~+/src/dotnet-levelmeter/dotnet-levelmeter.csproj -- -c ${input:definitionFile}",
            "problemMatcher": []
        }
    ],
    "inputs": [
        {
            "id": "definitionFile",
            "type": "command",
            "command": "extension.commandvariable.file.pickFile",
            "args": {
                "fromFolder": {
                    "fixed": "${workspaceFolder}/scales/definitions"
                },
                "include": "**/*.json",
                "description": "Select a scale definition file.",
                "display": "fileName"
            }
        }
    ]
}